459758.899420] message_slot: loading out-of-tree module taints kernel.
[459758.899927] message_slot: module verification failed: signature and/or required key missing - tainting kernel
[460605.931537]  message_slot_exit+0x2e/0xcc5 [message_slot]
[460605.931973] Modules linked in: message_slot(OE-) bnep bluetooth 8021q garp stp mrp llc vboxsf iptable_nat nf_nat jitterentropy_rng nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 libcrc32c drbg ansi_cprng iptable_mangle ecdh_generic iptable_filter rfkill ecc ghash_clmulni_intel aesni_intel libaes crypto_simd snd_intel8x0 snd_ac97_codec ac97_bus snd_pcm joydev cryptd glue_helper pcspkr snd_timer serio_raw snd sg ac soundcore evdev vboxguest parport_pc ppdev lp parport fuse configfs ip_tables x_tables autofs4 ext4 crc16 mbcache jbd2 crc32c_generic hid_generic usbhid hid sd_mod t10_pi crc_t10dif crct10dif_generic sr_mod vmwgfx cdrom ata_generic ttm drm_kms_helper cec ahci libahci ata_piix drm crct10dif_pclmul crct10dif_common ohci_pci libata crc32_pclmul ohci_hcd crc32c_intel scsi_mod psmouse ehci_pci ehci_hcd i2c_piix4 usbcore battery usb_common e1000 video button



void test1()
{
	int device0_fd;
	size_t bytes_written;
	size_t bytes_read;
	char msg[128];

	device0_fd = open(DEV0, O_RDWR);
	if (device0_fd < 0)
	{ print_failure(1);printf("%d\n", device0_fd); exit(0); }
	
	if (ioctl(device0_fd, MSG_SLOT_CHANNEL, 6) < 0)
	{ print_failure(1); exit(0); }

	bytes_written = write(device0_fd, "Hello World!", 12);
	if (bytes_written < 12)
	{ print_failure(1); exit(0); }

	bytes_read = read(device0_fd, msg, 128);
	if (bytes_read < 12)
	{ print_failure(1); exit(0); }

	msg[12] = '\0';
	if (strcmp(msg, "Hello World!"))
	{ print_failure(1); exit(0); }

	print_success(1);
}

void test2()
{
        int device0_fd;
	int device1_fd;
        size_t bytes_written;
        size_t bytes_read;
        char msg[128];

        device0_fd = open(DEV0, O_RDWR);
        if (device0_fd < 0)
        { print_failure(2); exit(0); }

        device1_fd = open(DEV1, O_RDWR);
        if (device1_fd < 0)
        { print_failure(2); exit(0); }

        if (ioctl(device0_fd, MSG_SLOT_CHANNEL, 99) < 0)
        { print_failure(2); exit(0); }

        if (ioctl(device1_fd, MSG_SLOT_CHANNEL, 99) < 0)
        { print_failure(2); exit(0); }

        bytes_written = write(device0_fd, "dev0", 4);
        if (bytes_written < 4)
        { print_failure(2); exit(0); }

        bytes_written = write(device1_fd, "dev1", 4);
        if (bytes_written < 4)
        { print_failure(2); exit(0); }

        bytes_read = read(device0_fd, msg, 128);
        if (bytes_read < 4)
        { print_failure(2); exit(0); }

        msg[4] = '\0';
        if (strcmp(msg, "dev0"))
        { print_failure(2); exit(0); }

        bytes_read = read(device1_fd, msg, 128);
        if (bytes_read < 4)
        { print_failure(2); exit(0); }

        msg[4] = '\0';
        if (strcmp(msg, "dev1"))
        { print_failure(2); exit(0); }

	close(device0_fd);
	close(device1_fd);

        print_success(2);

}

void test3()
{
        int device0_fd;
        size_t bytes_read;
        char msg[128];

        device0_fd = open(DEV0, O_RDWR);
        if (device0_fd < 0)
        { print_failure(3); exit(0); }

        if (ioctl(device0_fd, MSG_SLOT_CHANNEL, 6) < 0)
        { print_failure(3); exit(0); }

        bytes_read = read(device0_fd, msg, 128);
        if (bytes_read < 12)
        { print_failure(3); exit(0); }

	msg[12] = '\0';
	if (strcmp(msg, "Hello World!"))
	{ print_failure(3); exit(0); }

	close(device0_fd);

	print_success(3);
}

void test4()
{
	int device0_fd;
	int device1_fd;

        device0_fd = open(DEV0, O_RDWR);
        if (device0_fd < 0)
        { print_failure(4); exit(0); }

        device1_fd = open(DEV1, O_RDWR);
        if (device1_fd < 0)
        { print_failure(4); exit(0); }

        if (ioctl(device0_fd, MSG_SLOT_CHANNEL, 6) < 0)
        { print_failure(4); exit(0); }

	if (write(device1_fd, "hey", 3) >= 0)
	{ print_failure(4); exit(0); }

        close(device0_fd);
	close(device1_fd);

        print_success(4);
}
